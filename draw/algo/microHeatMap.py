import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

# 股票的ticker名称
tickers = ['AXP', 'AMGN', 'AAPL', 'BA', 'CAT', 'CSCO', 'CVX', 'GS', 'HD',
           'HON', 'IBM', 'INTC', 'JNJ', 'KO', 'JPM', 'MCD', 'MMM', 'MRK',
           'MSFT', 'NKE', 'PG', 'TRV', 'UNH', 'CRM', 'VZ', 'V', 'WBA', 'WMT', 'DIS']

# 策略名称
strategies = ["t0", "M0", "EG", "ONS", "UP", "SP", "ACO", "SA", "PSO", "Genetic", "Anticor", "PAMR", "CWMR", "OLMAR", "Best-N-of-N", "CORN", "KDD", "DDPG", "MKD"]

# 不同策略对应的权重
weights_data = {
    "t0": [0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
    "M0": [0.0345] * 29,
    "EG": [0.0345, 0.0344, 0.0345, 0.0346, 0.0346, 0.0345, 0.0344, 0.0344, 0.0343, 0.0344, 0.0344, 0.0345, 0.0344, 0.0344, 0.0344, 0.0345, 0.0344, 0.0345, 0.0345, 0.0344, 0.0345, 0.0343, 0.0344, 0.0344, 0.0345, 0.0345, 0.0343, 0.0343, 0.0345],
    "ONS": [0.0336, 0.0337, 0.036, 0.0341, 0.0345, 0.0344, 0.0358, 0.0345, 0.0345, 0.0355, 0.0347, 0.0364, 0.035, 0.0362, 0.033, 0.0355, 0.034, 0.0325, 0.0349, 0.0345, 0.0342, 0.034, 0.033, 0.0338, 0.0345, 0.0345, 0.0342, 0.0339, 0.0331],
    "UP": [0.0304, 0.0265, 0.0607, 0.0004, 0.0429, 0.0146, 0.057, 0.0146, 0.0117, 0.0553, 0.0603, 0.0059, 0.0278, 0.0148, 0.0465, 0.056, 0.0303, 0.0164, 0.0499, 0.0533, 0.0136, 0.045, 0.0227, 0.0378, 0.0118, 0.0322, 0.0578, 0.0508, 0.0515],
    "SP": [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.1, 0., 0.1, 0.1, 0., 0.1, 0.1, 0.1, 0., 0., 0.1, 0.1, 0., 0., 0.1, 0., 0., 0.1, 0.],
    "ACO": [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    "Annealing": [0.0023, 0.0079, 0.036, 0.1024, 0.0094, 0.014, 0.0294, 0.0022, 0.0105, 0.0028, 0.0085, 0.0215, 0.0162, 0.0645, 0.0131, 0.0036, 0.1331, 0.1467, 0.0195, 0.015, 0.0129, 0.0335, 0.0805, 0.0193, 0.0151, 0.0636, 0.0591, 0.0323, 0.0235],
    "PSO": [0.0783, 0.016, 0.0854, 0.0399, 0.0289, 0.0697, 0.0067, 0.0494, 0.0115, 0.0065, 0.0734, 0.0277, 0.0502, 0.015, 0.0000015, 0.0612, 0.000024, 0.0622, 0.0014, 0.0000002, 0.0155, 0.0821, 0.0101, 0.0039, 0.0806, 0.0238, 0.0037, 0.0646, 0.0309],
    "Genetic": [0.0027, 0.0397, 0.0239, 0.0053, 0.2053, 0.0372, 0.0059, 0.0055, 0.002, 0.0014, 0.0468, 0.061, 0.0005, 0.0015, 0.0078, 0.0161, 0.1975, 0.7531, 0.0472, 0.0147, 0.0026, 0.0093, 0.0257, 0.0193, 0.0019, 0.0512, 0.0059, 0.0167, 0.084],
    "Anticor": [0.0287, 0.0277, 0.0327, 0.0494, 0.0362, 0.0381, 0.0053, 0.0232, 0.0064, 0.0339, 0.0196, 0.0286, 0.0312, 0.0378, 0.0546, 0.0515, 0.0386, 0.003, 0.0351, 0.0428, 0.0663, 0.0434, 0.0502, 0.0267, 0.0458, 0.0263, 0.0425, 0.0368, 0.0361],
    "PAMR": [0.051, 0.0221, 0.0418, 0.0639, 0.0621, 0.0418, 0.0344, 0.0301, 0.0154, 0.0356, 0.0347, 0.0388, 0.0183, 0.0408, 0.0352, 0.0442, 0.0206, 0.0416, 0.0444, 0.0118, 0.0458, 0.0168, 0.0204, 0.0281, 0.0535, 0.0428, 0.0135, 0.0082, 0.0458],
    "CWMR": [0.0441, 0.0272, 0.0383, 0.0512, 0.0519, 0.0382, 0.0348, 0.0329, 0.0229, 0.036, 0.0341, 0.0375, 0.026, 0.0368, 0.0352, 0.0411, 0.0259, 0.0381, 0.0407, 0.023, 0.0409, 0.0225, 0.0266, 0.0305, 0.0467, 0.0391, 0.0226, 0.0156, 0.0407],
    "OLMAR": [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
    "Best-N-of-N": [0.0412, 0.0657, 0.0583, 0.1889, 0.1015, 0.0382, 0.0232, 0.0299, 0.0011, 0.0281, 0.012, 0.0341, 0.0046, 0.0199, 0.0113, 0.0606, 0.0011, 0.039, 0.0107, 0, 0.0307, 0.0095, 0.026, 0.0056, 0.0615, 0.0573, 0.0208, 0.0003, 0.0176],
    "CORN": [0.0125, 0.0498, 0.0275, 0.0767, 0.0398, 0.0305, 0.0102, 0.0337, 0.0297, 0.0698, 0.0489, 0.0411, 0.0419, 0.0132, 0.0404, 0.0288, 0.0133, 0.0489, 0.0672, 0.0152, 0.0243, 0.0166, 0.0255, 0.0385, 0.0618, 0.0323, 0.0135, 0.0202, 0.027],
    "DDPG": [0., 0., 0., 0., 0., 0.1888, 0., 0., 0., 0., 0., 0., 0.8112, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
    "KDD": [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
    "MKD": [0.020976, 0.038646, 0.097340, 0.024284, 0.023379,0.000158, 0.019798, 0.041834, 0.025276, 0.016483,0.016683, 0.047019, 0.031163, 0.107392, 0.003085,0.031897, 0.026321, 0.043053, 0.034384, 0.052719,0.004361, 0.031932, 0.020033, 0.044605, 0.045239,0.023966, 0.070166, 0.034297, 0.023512]
}

weights_df = pd.DataFrame(weights_data, index=tickers)

# 绘制热力图
plt.figure(figsize=(15, 10))
sns.heatmap(weights_df, annot=True, cmap='viridis')
plt.title('Strategy Weights Heatmap')
plt.xlabel('Strategies')
plt.ylabel('Tickers')
plt.savefig("HeatMap.pdf", format='pdf')
plt.show()